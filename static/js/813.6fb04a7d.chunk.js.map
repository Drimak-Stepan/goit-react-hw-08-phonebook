{"version":3,"file":"static/js/813.6fb04a7d.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactList/ContactList.styled.jsx","components/Loader/DeleteLoader.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/nanoid/index.browser.js","components/Loader/AddLoader.js","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.contacts.filter(({ name }) => {\n    const normalized = name.toLowerCase();\n    return normalized.includes(normalizedFilter);\n  });\n\n  return result;\n};\n\nexport const isLoading = ({ contacts }) => contacts.isLoading;\nexport const isLoadingAdd = ({ contacts }) => contacts.isLoadingAdd;\n","import styled from '@emotion/styled';\n\nexport const Stats = styled.ul`\n  list-style: none;\n  padding: 10px 0 0 0;\n  margin: 16px 0 10px;\n  border-radius: 24px;\n  border: 4px solid #9cb0b3;\n`;\n\nexport const StatsLi = styled.li`\n  position: relative;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.span`\n  position: relative;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 8px 8px 8px 32px;\n  background-color: white;\n  border-radius: 24px;\n  border: 1px solid #9cb0b3;\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  display: block;\n  width: 85px;\n  height: 40px;\n  bottom: 0;\n  right: 10px;\n  font-weight: 700;\n  font-size: 20px;\n  padding: 8px;\n  border-radius: 24px;\n  border: 1px solid #9cb0b3;\n  cursor: pointer;\n  color: black;\n  background-color: white;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: #1976d2;\n    color: white;\n  }\n`;\n","import { FallingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <FallingLines\n      color=\"white\"\n      width=\"30\"\n      visible={true}\n      ariaLabel=\"falling-lines-loading\"\n    />\n  );\n};\n\nexport default Loader;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport {\n  getFilteredContacts,\n  isLoading,\n} from 'redux/contacts/contactsSelectors';\n\nimport { Stats, StatsLi, Item, Btn } from './ContactList.styled';\nimport { FiUser, FiPhone, FiTrash2 } from 'react-icons/fi';\nimport DeleteLoader from '../Loader/DeleteLoader';\nimport toast from 'react-hot-toast';\n\nconst ContactList = () => {\n  const list = useSelector(getFilteredContacts);\n\n  const isRemoved = useSelector(isLoading);\n  const dispatch = useDispatch();\n  const onDeleteContact = id =>\n    dispatch(\n      deleteContact(id),\n      toast('Contact deleted', { style: { color: '#e84a5f' } })\n    );\n\n  return list.length >= 1 ? (\n    <Stats>\n      {list.map(({ id, name, number }) => (\n        <StatsLi key={id}>\n          <Item>\n            <FiUser\n              style={{\n                color: 'green',\n                position: 'absolute',\n                left: 8,\n                top: 11,\n              }}\n            />\n            {name}\n          </Item>\n          <Item>\n            <FiPhone\n              style={{\n                color: 'green',\n                position: 'absolute',\n                left: 8,\n                top: 12,\n              }}\n            />\n            {number}\n          </Item>\n          <Btn type=\"button\" onClick={() => onDeleteContact(id)}>\n            {!isRemoved ? <FiTrash2 /> : <DeleteLoader />}\n          </Btn>\n        </StatsLi>\n      ))}\n    </Stats>\n  ) : (\n    <Stats>\n      <StatsLi\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          padding: 0,\n          fontSize: 20,\n          fontWeight: 700,\n        }}\n      >\n        Not found contacts\n      </StatsLi>\n    </Stats>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  margin-bottom: 16px;\n  border-radius: 24px;\n  border: 4px solid #9cb0b3;\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n  padding: 8px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border: 1px solid #9cb0b3;\n  outline-color: #1976d2;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  width: 170px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 700;\n  font-size: 20px;\n  padding: 8px;\n  border-radius: 24px;\n  border: 1px solid #9cb0b3;\n  outline-color: #1976d2;\n  cursor: pointer;\n  color: black;\n  background-color: white;\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: #1976d2;\n    color: white;\n  }\n`;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"25\"\n      width=\"40\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n\nexport default Loader;\n","import { useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {\n  getFilteredContacts,\n  isLoadingAdd,\n} from 'redux/contacts/contactsSelectors';\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport AddLoader from '../Loader/AddLoader';\nimport toast from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const isAdd = useSelector(isLoadingAdd);\n  const list = useSelector(getFilteredContacts);\n\n  const handelChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const isDublicate = () => {\n    const normalizedName = name.toLowerCase();\n    const result = list.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n    if (result) {\n      toast(`Name: ${name} is already exist`, {\n        style: { color: '#1976d2' },\n      });\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n    toast('Contact add', { style: { color: 'green' } });\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    isDublicate();\n  };\n\n  const nameId = useMemo(() => nanoid(), []);\n  const numberId = useMemo(() => nanoid(), []);\n\n  return (\n    <>\n      <Form onSubmit={handelSubmit}>\n        <div>\n          <Label htmlFor={nameId}>Name</Label>\n          <div>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id={nameId}\n              value={name}\n              onChange={e => setName(e.target.value)}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </div>\n          <Label htmlFor={numberId}>Number</Label>\n          <div>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              id={numberId}\n              value={number}\n              onChange={handelChangeNumber}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </div>\n\n          <Btn type=\"submit\">{isAdd ? <AddLoader /> : 'ADD CONTACT'}</Btn>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = ({ filter }) => filter;\n","import styled from '@emotion/styled';\n\nexport const Block = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  border-radius: 24px;\n  border: 4px solid #9cb0b3;\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n  padding: 8px;\n  margin-top: 5px;\n  border-radius: 5px;\n  border: 1px solid #9cb0b3;\n  outline-color: #1976d2;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { Block, Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Block>\n      <div>\n        <Label htmlFor=\"filterId\">Find contacts by name</Label>\n        <div>\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={value}\n            onChange={e => dispatch(setFilter(e.target.value))}\n            id=\"filterId\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n      </div>\n    </Block>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook List</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getFilteredContacts","contacts","filter","normalizedFilter","toLowerCase","name","includes","isLoading","isLoadingAdd","Stats","styled","StatsLi","Item","Btn","color","width","visible","ariaLabel","list","useSelector","isRemoved","dispatch","useDispatch","length","map","id","number","style","position","left","top","type","onClick","deleteContact","toast","onDeleteContact","DeleteLoader","display","justifyContent","padding","fontSize","fontWeight","Form","Label","Input","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","height","wrapperStyle","wrapperClass","colors","useState","setName","setNumber","isAdd","nameId","useMemo","numberId","onSubmit","e","preventDefault","normalizedName","find","addContact","isDublicate","htmlFor","value","onChange","target","pattern","title","required","AddLoader","getFilter","Block","setFilter","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}